{{> pages/header}}
<style type="text/css">
    #whole-chat-container {
        overflow-y: scroll !important;
        height: 60vh !important;
        background-image: url('/assets/admin/img/fundo_site_02.jpg') !important;
        background-size: fixed;
    }

    .msg-in {
        border-radius: 1em !important;
        background-color: white;
        -webkit-box-shadow: -4px 10px 26px -9px rgba(0, 0, 0, 0.35);
        -moz-box-shadow: -4px 10px 26px -9px rgba(0, 0, 0, 0.35);
        box-shadow: -4px 10px 26px -9px rgba(0, 0, 0, 0.35);
    }

    .msg-out {
        background-color: #dcf8c6;
        border-radius: 1em !important;
        -webkit-box-shadow: 6px 10px 26px -9px rgba(0, 0, 0, 0.35);
        -moz-box-shadow: 6px 10px 26px -9px rgba(0, 0, 0, 0.35);
        box-shadow: 6px 10px 26px -9px rgba(0, 0, 0, 0.35);
    }
</style>
<!-- Header -->
<div class="header pb-6">
    <div class="container-fluid">
        <div class="header-body">
            <div class="row align-items-center py-4">
                <div class="col-lg-6 col-6">
                    <nav aria-label="breadcrumb" class="d-none d-md-inline-block ml-md-4">
                        <ol class="breadcrumb breadcrumb-links breadcrumb-dark">
                            <li class="breadcrumb-item"><a href="#"><i class="fas fa-home"></i></a></li>
                            <li class="breadcrumb-item"><a href="/">Administrativo</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Atendimentos por voz na plataforma</li>
                        </ol>
                    </nav>
                </div>
                <div class="col-lg-6 col-6 clear-fix">
                    <form class="navbar-search navbar-search-light form-inline float-right" id="navbar-search-main">
                        <div class="form-group mb-0">
                            <div class="input-group input-group-alternative input-group-merge">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                </div>
                                <input class="form-control" placeholder="Procurar ... " type="text">
                            </div>
                        </div>
                        <button type="button" class="close" data-action="search-close" data-target="#navbar-search-main"
                            aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<!-- Page content -->
<main class="container-fluid mt--6">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <h2 class="card-header"><strong>Listando atendimentos por chat na plataforma:</strong></h2>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="chatsTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">Atendente</th>
                                    <th scope="col">Cliente</th>
                                    <th scope="col">Créditos Gastos</th>
                                    <th scope="col">Opções</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

{{> pages/footer }}

<script type="text/javascript">
    $(document).ready(() => {
        const timestamp = (unix_timestamp) => {
            var date = new Date(unix_timestamp);
            var hours = date.getHours();
            var minutes = "0" + date.getMinutes();
            var seconds = "0" + date.getSeconds();
            let year = date.getFullYear();
            let month = (1 + date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');

            var formattedTime = day + '/' + month + '/' + year + ' - ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
            return formattedTime;
        }

        const parseData = (unix_timestamp) => {
            var date = new Date(unix_timestamp);
            let year = date.getFullYear();
            let month = (1 + date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');
            return day + '/' + month + '/' + year
        }

        var chatsTable = $('#chatsTable').DataTable({
            "ordering": false,
            "info": false,
            "language":
            {
                "sEmptyTable": "Nenhum registro encontrado",
                "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "_MENU_ resultados por página",
                "sLoadingRecords": "Carregando...",
                "sProcessing": "Processando...",
                "sZeroRecords": "Nenhum registro encontrado",
                "sSearch": "Pesquisar",
                "oPaginate": {
                    "sNext": ">",
                    "sPrevious": "<",
                    "sFirst": "<<",
                    "sLast": ">>"
                },
                "oAria": {
                    "sSortAscending": ": Ordenar colunas de forma ascendente",
                    "sSortDescending": ": Ordenar colunas de forma descendente"
                },
                "select": {
                    "rows": {
                        "_": "Selecionado %d linhas",
                        "0": "Nenhuma linha selecionada",
                        "1": "Selecionado 1 linha"
                    }
                },
                "buttons": {
                    "copy": "Copiar para a área de transferência",
                    "copyTitle": "Cópia bem sucedida",
                    "copySuccess": {
                        "1": "Uma linha copiada com sucesso",
                        "_": "%d linhas copiadas com sucesso"
                    }
                }
            }

        });


        $.get('/admin/attendance-voice/list/', (e) => {
            var data = JSON.parse(e);
            [].map.call((data), async (chat) => {
                var minsSpend = new Date(Date.parse(chat['call_begin_date']) - Date.parse(chat['call_end_date']));
                chatsTable.row.add([
                    JSON.parse(await $.get('/admin/query-for-user-name/' + chat['clerk_id'] + '/', (e) => {
                        return e;
                    }))[0] ?? "Não localizado (Usuário Excluído).",
                    JSON.parse(await $.get('/admin/query-for-user-name/' + chat['user_id'] + '/', (e) => {
                        return e;
                    }))[0] ?? "Não localizado (Usuário Excluído).",
                    '<span class="badge badge-primary">' + minsSpend.getMinutes() + ' Minutos gastos </span>',
                    '<audio controls="" autostart="false" name="media"><source src="https://www.templo-sagrado.com/' + chat['call_file']  + '" type="audio/ogg"></audio>'
                ]).draw(true);
            });
        });


    });
</script>